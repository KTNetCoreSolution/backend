name: Deploy Backend (Dev)

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  deploy-backend:
    runs-on: [self-hosted, Windows, X64, backend-dev]

    steps:
      ### 1. Git Safe Directory 설정
      - name: Add Safe Directory
        shell: powershell
        run: |
          $safeDir = 'D:/actions_work/netcore/source/backend'
          git config --global --add safe.directory $safeDir
          Write-Output "✅ Git safe directory added for: $safeDir"

      ### 2. 현재 소스 코드 백업
      - name: Backup Current Source Code
        shell: powershell
        run: |
          $baseDir = 'D:\actions_work\netcore'
          $sourceDir = "$baseDir\source\backend"
          $backupBaseDir = "$baseDir\backup\source\backend"

          # 현재 월별 백업 디렉터리 생성
          $currentMonthDir = Join-Path -Path $backupBaseDir -ChildPath (Get-Date -Format 'yyyyMM')
          if (!(Test-Path -Path $currentMonthDir)) {
              New-Item -ItemType Directory -Path $currentMonthDir -Force
          }

          # 백업 파일 생성 (ZIP 형식으로 저장)
          $currentDateTime = "$(Get-Date -Format 'yyyyMMdd-HHmmss').zip"
          $backupFile = Join-Path -Path $currentMonthDir -ChildPath $currentDateTime
          Compress-Archive -Path "$sourceDir\*" -DestinationPath $backupFile -Force

          Write-Output "✅ Source backup created at: $backupFile"

      ### 3. 최신 소스 코드 가져오기
      - name: Checkout Source Code
        shell: powershell
        run: |
          $repoUrl = "https://${{ secrets.GITHUB_ACTOR }}:${{ secrets.KTNETCOREACTION }}@github.com/KTNetCoreSolution/backend.git"
          $branch = 'main'
          $sourceDir = 'D:\actions_work\netcore\source\backend'

          # 기존 소스 폴더 삭제
          if (Test-Path -Path $sourceDir) {
              Remove-Item -Recurse -Force -Path $sourceDir
              Write-Output "✅ Removed existing source directory: $sourceDir"
          }
          
          # 새로운 소스 폴더 생성 및 소스 클론
          New-Item -ItemType Directory -Path $sourceDir -Force
          git clone --branch $branch $repoUrl $sourceDir

          Write-Output "✅ Source code cloned to: $sourceDir"

      ### 4. Java 환경 확인
      - name: Verify Java Environment
        shell: powershell
        run: |
          Write-Output "🔍 Checking Java environment..."
          java -version
          If ($?) {
              Write-Output "✅ Java installation verified."
          } Else {
              Write-Error "❌ Java is not installed or incorrectly configured. Please check the environment."
              exit 1
          }

      ### 5. Backend 빌드 (테스트 미포함)
      - name: Build Backend
        shell: powershell
        run: |
          $buildDir = "D:\actions_work\netcore\source\backend"
          cd $buildDir
          
          # Gradle 빌드 수행 (테스트 제외)
          try {
              gradle clean build -x test
              Write-Output "✅ Backend build completed successfully (tests excluded)."
          } catch {
              Write-Error "❌ Backend build failed. Please check the build logs."
              exit 1
          }

      ### 6. 빌드 결과물 배포 디렉터리로 복사
      - name: Deploy Built JAR
        shell: powershell
        run: |
          $baseDir = "D:\actions_work\netcore"
          $sourceDir = "$baseDir\source\backend\build\libs"
          $deployDir = "$baseDir\deploy\backend"

          # 실행 가능한 JAR 파일 검색 (plain 제외)
          $jarFile = (Get-ChildItem -Path $sourceDir -Filter '*.jar' | Where-Object { $_.Name -notlike '*-plain.jar' } | Sort-Object LastWriteTime -Descending | Select-Object -First 1).FullName

          if (-not $jarFile) {
              Write-Error "❌ No executable JAR file found in: $sourceDir"
              exit 1
          }

          if (!(Test-Path -Path $deployDir)) {
              New-Item -ItemType Directory -Path $deployDir -Force
              Write-Output "✅ Deploy directory created at: $deployDir"
          }

          # JAR 파일 복사
          Copy-Item -Path $jarFile -Destination $deployDir -Force
          Write-Output "✅ Executable JAR copied to: $deployDir"

      ### 7. 기존 백엔드 애플리케이션 종료 및 새로 실행
      - name: Restart Backend Service
        shell: powershell
        run: |
          $deployDir = 'D:\actions_work\netcore\deploy\backend'

          # 기존 실행 중인 애플리케이션 종료
          $process = Get-Process -Name 'java' -ErrorAction SilentlyContinue
          if ($process) {
              Stop-Process -Id $process.Id -Force
              Write-Output "✅ Existing backend service stopped."
          }

          # 최신 JAR 파일 실행
          $jarFile = Join-Path -Path $deployDir -ChildPath (Get-ChildItem -Path $deployDir -Filter '*.jar' | Sort-Object LastWriteTime -Descending | Select-Object -First 1).Name
          Start-Process -FilePath "java.exe" -ArgumentList "-jar `"$deployDir\$jarFile`"" -NoNewWindow -PassThru
          Write-Output "✅ Backend service restarted with: $jarFile"